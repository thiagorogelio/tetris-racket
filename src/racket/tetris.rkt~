#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 80 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 32
#"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 56 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 107 142 35 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 100 149 237 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 105 225 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 70 130 180 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 47 79 79 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 139 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 0 130 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 32 240 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 250 128 114 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 184 134 11 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 128 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 169 169 169 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 0 0 0 0 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 228 225 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 224 255 255 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 0 0 224 255 255 -1 -1
          0 936 0 27 3 12 #"#lang racket"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; Voc\303\252 deve implementar as fun\303\247\303\265es neste arqui"
 #"vo. Novas fun\303\247\303\265es podem ser"
) 0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; criadas, mas todas as fun\303\247\303\265es devem ter testes (no "
 #"arquivo testes.rkt)."
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";; Observe que algumas destas fun\303\247\303\265es n\303\243o tem t"
 #"estes, faz parte do trabalho"
) 0 0 23 29 1 #"\n"
0 0 17 3 22 #";; criar estes testes."
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Voc\303\252 n\303\243o precisa se preocupar com ler a tecla press"
 #"ionada ou desenhar o jogo"
) 0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; na tela. O arquivo main.rkt chama uma fun\303\247\303\243o que fa"
 #"z isso. Basta voc\303\252"
) 0 0 23 29 1 #"\n"
0 0 17 3 62
(
 #";; implementar as fun\303\247\303\265es deste arquivo que o jogo fun"
 #"ciona."
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; Para ter uma ideia do processo de execu\303\247\303\243o do jogo,"
 #" execute o arquivo"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; main.rkt sem mudar nada neste arquivo. Uma janela ir\303\241 apar"
 #"ecer. Pressione"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";; algumas teclas e observe a sa\303\255da no console do DrRacket. V"
 #"eja o corpo"
) 0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; inicial das fun\303\247\303\265es make-tetris-padrao, trata-tecla"
 #", trata-tick e desenha."
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 19 3 10 #"\"base.rkt\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"require"
0 0 23 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 14 3 7 #"provide"
0 0 23 3 1 #" "
0 0 14 3 18 #"make-tetris-padrao"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 20 #"tetramino->lista-pos"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 12 #"lop-validas?"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 11 #"lop-livres?"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 4 #"fixa"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 5 #"limpa"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 11 #"trata-tecla"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 10 #"trata-tick"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"         "
0 0 14 3 7 #"desenha"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 12 #";; -> Tetris"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; Cria o jogo inicial."
0 0 23 29 1 #"\n"
0 0 17 3 48
#";; Esta fun\303\247\303\243o \303\251 chamada no arquivo main.rkt."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 18 #"make-tetris-padrao"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"make-tetris"
0 0 23 3 1 #" "
0 0 14 3 14 #"LARGURA-PADRAO"
0 0 23 3 1 #" "
0 0 14 3 13 #"ALTURA-PADRAO"
0 0 23 3 2 #" ("
0 0 14 3 17 #"stream-tetraminos"
0 0 23 3 2 #") "
0 0 14 3 14 #"TIMEOUT-PADRAO"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 22 #";; Jogo String -> Jogo"
0 0 23 29 1 #"\n"
0 0 17 3 60
(
 #";; Esta fun\303\247\303\243o \303\251 chama"
 #"da quando uma tecla \303\251 pressionada."
) 0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Devolve um jogo com o tetramin\303\263 que est\303\241 caindo mov"
 #"ido de acordo com a tecla"
) 0 0 23 29 1 #"\n"
0 0 17 3 39 #";;   \"right\" - tenta mover para direita"
0 0 23 29 1 #"\n"
0 0 17 3 40 #";;   \"left\"  - tenta mover para esquerda"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";;   \"up\"    - tenta rotacionar"
0 0 23 29 1 #"\n"
0 0 17 3 37 #";;   \"down\"  - tenta mover para baixo"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; Se a tecla for \"right\", \"l"
 #"eft\" ou \"up\" e o movimento n\303\243o puder ser"
) 0 0 23 29 1 #"\n"
0 0 17 3 53
(
 #";; realizado, o jogo \303\251 devolvido sem modifica\303\247\303\265"
 #"es."
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; Se a tecla for \"down\" e o movimento n\303\243o puder ser realiz"
 #"ado, tetra \303\251 fixado"
) 0 0 23 29 1 #"\n"
0 0 17 3 73
(
 #";; no campo, as linhas completas s\303\243o removidas, o pr\303\263x"
 #"imo tetramin\303\263 \303\251"
) 0 0 23 29 1 #"\n"
0 0 17 3 71
(
 #";; selecionada para cair e o contador de automovimento retorna ao va"
 #"lor"
) 0 0 23 29 1 #"\n"
0 0 17 3 11 #";; inicial."
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; Se o movimento puder ser realizado, o jogo ap\303\263s o moviment"
 #"o \303\251 devolvido."
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Use a fun\303\247\303\243o key=? para comparar o tecla com os val"
 #"ores \"right\", \"left, \"up\""
) 0 0 23 29 1 #"\n"
0 0 17 3 12 #";; e \"down\"."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"trata-tecla"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #" "
0 0 14 3 5 #"tecla"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 23 3 1 #" "
0 0 19 3 20 #"\"\\ntrata-tecla:~a\\n\""
0 0 23 3 1 #" "
0 0 14 3 5 #"tecla"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Jogo -> Jogo"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Fun\303\247\303\243o que trata um "
 #"tick. Esta fun\303\247\303\243o \303\251 chamada 28 vezes por segund"
 #"o, ela"
) 0 0 23 29 1 #"\n"
0 0 17 3 70
(
 #";; deve mover o tetra para baixo depois que uma determinada quantida"
 #"de"
) 0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; (TIMEOUT-PADRAO) de ticks. Se o jogador mover para baixo e fixar "
 #"o"
) 0 0 23 29 1 #"\n"
0 0 17 3 41 #";; tetramin\303\263, a contagem deve reiniciar."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 10 #"trata-tick"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"t\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; Tetris -> Imagem"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; Esta fun\303\247\303\243o \303\251 chamada quando o jogo precisa "
 #"ser desenhado na tela. Devolve"
) 0 0 23 29 1 #"\n"
0 0 17 3 36 #";; uma imagem que representa o jogo."
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; Veja as fun\303\247\303\265es pr\303\251-definidas rectangle, bes"
 #"ide, above e overlay no pacote"
) 0 0 23 29 1 #"\n"
0 0 17 3 15 #";; 2htdp/image."
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 6 #"printf"
0 0 23 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 23 3 2 #" ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 14 #"tetris-largura"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 2 #") "
0 0 14 3 9 #"Q-LARGURA"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 14 #"             ("
0 0 14 3 1 #"*"
0 0 23 3 2 #" ("
0 0 14 3 13 #"tetris-altura"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 2 #") "
0 0 14 3 8 #"Q-ALTURA"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 7 #"\"solid\""
0 0 23 29 1 #"\n"
0 0 23 3 13 #"             "
0 0 19 3 7 #"\"black\""
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 27 #";; Tetramino -> Lista(Posn)"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";; Devolve a lista de posi\303\247\303\265es que t ocupa no campo co"
 #"nsiderando a rota\303\247\303\243o e a"
) 0 0 23 29 1 #"\n"
0 0 17 3 50
(
 #";; posi\303\247\303\243o (transla\303\247\303\243"
 #"o em rela\303\247\303\243o a origem)."
) 0 0 23 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 23 29 1 #"\n"
0 0 17 3 38 #";; Por exemplo, seja TT1 definido como"
0 0 23 29 1 #"\n"
0 0 17 3 54 #";; (define TT1 (tetramino T_TIPOS 1 (posn 1 0) T_COR))"
0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; este tetramin\303\263 est\303\241 "
 #"na rota\303\247\303\243o 1 e na posi\303"
 #"\247\303\243o (posn 1 0). O elemento na"
) 0 0 23 29 1 #"\n"
0 0 17 3 78
(
 #";; posi\303\247\303\243o 1 de T_TIPOS"
 #" \303\251 T1 que \303\251 a seguinte lista de listas (definina em"
) 0 0 23 29 1 #"\n"
0 0 17 3 19 #";; tetra-tipos.rkt)"
0 0 23 29 1 #"\n"
0 0 17 3 25 #";;    0 1 2     ; colunas"
0 0 23 29 1 #"\n"
0 0 17 3 24 #";;              ; linhas"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";; '((0 1 0)    ; 0"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;   (0 1 1)    ; 1"
0 0 23 29 1 #"\n"
0 0 17 3 19 #";;   (0 1 0)))  ; 2"
0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; As as posi\303\247\303\265es ocupadas por T1 s\303\243o marcadas "
 #"com 1, ou seja, as posi\303\247\303\265es"
) 0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; ocupadas por T1 s\303\243o (posn 0 1) (posn 1 1) (posn 1 2) e (po"
 #"sn 2 1). Estas S\303\243o"
) 0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; as posi\303\247\303\265es em rela\303"
 #"\247\303\243o a (posn 0 0), mas o "
 #"tetramin\303\263 est\303\241 na posi\303\247\303\243o"
) 0 0 23 29 1 #"\n"
0 0 17 3 80
(
 #";; (posn 1 0), desta forma, p"
 #"recisamos fazer a transla"
 #"\303\247\303\243o das posi\303\247\303\265es. Para"
) 0 0 23 29 1 #"\n"
0 0 17 3 72
(
 #";; isto, somamos o ponto (posn 1 0) a cada ponto de T1, o que result"
 #"a em"
) 0 0 23 29 1 #"\n"
0 0 17 3 74
(
 #";; (pos 1 1) (posn 2 0) (posn 2 2) (posn 3 1). Observe que \303\251 "
 #"pos\303\255vel ter"
) 0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; um deslocamento em rela\303\247\303\243o a origem negativa. Por e"
 #"xemplo, se a posi\303\247\303\243o de"
) 0 0 23 29 1 #"\n"
0 0 17 3 75
(
 #";; TT1 fosse (posn 0 -1), obter\303\255amos como resposta da fun\303"
 #"\247\303\243o a lista com"
) 0 0 23 29 1 #"\n"
0 0 17 3 59
(
 #";; as posi\303\247\303\265es (posn 0 0) (posn 1 0) (pos 1 1) (pos 2 "
 #"0)."
) 0 0 23 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 23 29 1 #"\n"
0 0 17 3 76
(
 #";; Veja os testes para outros"
 #" exemplos de como esta fun\303\247\303\243o deve funcionar."
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";need refactoring"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lista-linha"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 14 3 4 #"desl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 23 3 1 #"("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 20 3 1 #"0"
0 0 23 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 23 3 2 #" ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-lin"
0 0 23 3 1 #" "
0 0 14 3 4 #"desl"
0 0 23 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-col"
0 0 23 3 1 #" "
0 0 14 3 4 #"desl"
0 0 23 3 5 #"))) ("
0 0 14 3 11 #"lista-linha"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 1 #"l"
0 0 23 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #") "
0 0 14 3 4 #"desl"
0 0 23 3 3 #"))]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lista-linha"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 1 #"l"
0 0 23 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 2 #") "
0 0 14 3 4 #"desl"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lista-tetra"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 4 #"desl"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 6 #"append"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lista-linha"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 1 #" "
0 0 14 3 4 #"desl"
0 0 23 3 3 #") ("
0 0 14 3 11 #"lista-tetra"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 4 #"desl"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 2 #"  "
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 15 #"tetra-lista-pos"
0 0 23 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 3 1 #" "
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 15 #"tetra-lista-pos"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"tetra"
0 0 23 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 23 3 1 #" "
0 0 14 3 1 #"n"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 20 #"tetramino->lista-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"lista-tetra"
0 0 23 3 2 #" ("
0 0 14 3 15 #"tetra-lista-pos"
0 0 23 3 2 #" ("
0 0 14 3 14 #"tetramino-tipo"
0 0 23 3 1 #" "
0 0 14 3 1 #"t"
0 0 23 3 3 #") ("
0 0 14 3 13 #"tetramino-rot"
0 0 23 3 1 #" "
0 0 14 3 1 #"t"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 2 #" ("
0 0 14 3 13 #"tetramino-pos"
0 0 23 3 1 #" "
0 0 14 3 1 #"t"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 41 #";; Lista(Posn) Natural Natural -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Devolve verdadeiro se todas os posi\303\247\303\265es de lp s\303"
 #"\243o v\303\241lidas, isto \303\251, est\303\243o"
) 0 0 23 29 1 #"\n"
0 0 17 3 69
(
 #";; dentro de um campo de tamanho largura x altura. Devolve falso cas"
 #"o"
) 0 0 23 29 1 #"\n"
0 0 17 3 14 #";; contr\303\241rio."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"lop-validas?"
0 0 23 3 1 #" "
0 0 14 3 2 #"lp"
0 0 23 3 1 #" "
0 0 14 3 7 #"largura"
0 0 23 3 1 #" "
0 0 14 3 6 #"altura"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 12 #"posn-valida?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 3 #"rst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 9 #"positive?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-lin"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 4 #")) ("
0 0 14 3 9 #"positive?"
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-col"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-lin"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 6 #"altura"
0 0 23 3 3 #") ("
0 0 14 3 2 #"<="
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-col"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 2 #") "
0 0 14 3 7 #"largura"
0 0 23 3 2 #") "
0 0 14 3 3 #"rst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 12 #"posn-valida?"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 14 3 2 #"lp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 31 #";; Lista(Posn) Campo -> Boolean"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Devolve verdadeiro se to"
 #"das as posi\303\247\303\243o de lp est\303\243o livres no campo. Dev"
 #"olve"
) 0 0 23 29 1 #"\n"
0 0 17 3 25 #";; falso caso contr\303\241rio."
0 0 23 29 1 #"\n"
0 0 17 3 55
(
 #";; Requer que todas as posi\303\247\303\265es em lp sejam v\303\241l"
 #"idas."
) 0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 17 #";need refactoring"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"posn-campo?"
0 0 23 3 1 #" "
0 0 14 3 5 #"campo"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posn-col?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 9 #"       [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 9 #"posn-col?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 23 3 1 #" "
0 0 14 3 1 #"c"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"equal?"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #") ("
0 0 14 3 9 #"posn-col?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 5 #"campo"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 2 #")]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 11 #"posn-campo?"
0 0 23 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 23 3 1 #" "
0 0 14 3 5 #"campo"
0 0 23 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 23 3 1 #" "
0 0 14 3 1 #"l"
0 0 23 3 2 #") "
0 0 14 3 1 #"c"
0 0 23 3 4 #")]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"lop-livres?"
0 0 23 3 1 #" "
0 0 14 3 2 #"lp"
0 0 23 3 1 #" "
0 0 14 3 5 #"campo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 9 #"lp-check?"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 1 #" "
0 0 14 3 3 #"rst"
0 0 23 3 3 #") ("
0 0 14 3 3 #"and"
0 0 23 3 1 #" "
0 0 14 3 3 #"rst"
0 0 23 3 2 #" ("
0 0 14 3 1 #"="
0 0 23 3 2 #" ("
0 0 14 3 11 #"posn-campo?"
0 0 23 3 1 #" "
0 0 14 3 5 #"campo"
0 0 23 3 2 #" ("
0 0 14 3 8 #"posn-lin"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #") ("
0 0 14 3 8 #"posn-col"
0 0 23 3 1 #" "
0 0 14 3 1 #"p"
0 0 23 3 3 #")) "
0 0 20 3 1 #"0"
0 0 23 3 3 #")))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 9 #"lp-check?"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 14 3 2 #"lp"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Jogo -> Jogo"
0 0 23 29 1 #"\n"
0 0 17 3 81
(
 #";; Preenche as posi\303\247\303\265es ocupadas pelo tetramin\303\263"
 #" (que est\303\241 caindo) no campo do"
) 0 0 23 29 1 #"\n"
0 0 17 3 8 #";; jogo."
0 0 23 29 1 #"\n"
0 0 17 3 58
(
 #";; Requer que tetramin\303\263 n\303\243o possa ser movido para baix"
 #"o."
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 4 #"fixa"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 11 #"lop-livres?"
0 0 23 3 2 #" ("
0 0 14 3 20 #"tetramino->lista-pos"
0 0 23 3 2 #" ("
0 0 14 3 12 #"tetris-tetra"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 4 #")) ("
0 0 14 3 12 #"tetris-campo"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 3 #")) "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 7 #"    [])"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 15 #";; Jogo -> Jogo"
0 0 23 29 1 #"\n"
0 0 17 3 82
(
 #";; Devolve um jogo sem as linh"
 #"as que est\303\243o completas, "
 #"isto \303\251, as linhas que n\303\243o"
) 0 0 23 29 1 #"\n"
0 0 17 3 77
(
 #";; tem nenhum quadrado vazio. O jogo devolvido tem o mesmo tamanho d"
 #"o jogo de"
) 0 0 23 29 1 #"\n"
0 0 17 3 11 #";; entrada."
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"linha-full?"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"not-0"
0 0 23 3 1 #" "
0 0 14 3 1 #"q"
0 0 23 3 1 #" "
0 0 14 3 3 #"rst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ("
0 0 14 3 3 #"and"
0 0 23 3 2 #" ("
0 0 14 3 3 #"not"
0 0 23 3 1 #"("
0 0 14 3 1 #"="
0 0 23 3 1 #" "
0 0 14 3 1 #"q"
0 0 23 3 1 #" "
0 0 20 3 1 #"0"
0 0 23 3 3 #")) "
0 0 14 3 3 #"rst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 23 3 1 #" "
0 0 14 3 5 #"not-0"
0 0 23 3 1 #" "
0 0 20 3 2 #"#t"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 13 #"remove-linhas"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 6 #"    [("
0 0 14 3 11 #"linha-full?"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 4 #"))) "
0 0 20 3 1 #"1"
0 0 23 3 1 #"]"
0 0 23 29 1 #"\n"
0 0 23 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 23 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 5 #"))]))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 11 #"remove-full"
0 0 23 3 1 #" "
0 0 14 3 3 #"lst"
0 0 23 3 2 #") "
0 0 20 3 2 #"#t"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 5 #"limpa"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 4 #"jogo"
0 0 23 3 2 #" ("
0 0 14 3 5 #"first"
0 0 23 3 2 #" ("
0 0 14 3 11 #"remove-full"
0 0 23 3 1 #" "
0 0 14 3 4 #"jogo"
0 0 23 3 4 #"))))"
0 0 23 29 1 #"\n"
0 0 23 29 1 #"\n"
0 0 17 3 23 #";; -> Stream(Tetramino)"
0 0 23 29 1 #"\n"
0 0 17 3 44 #";; Cria um stream rand\303\264mico de tetramin\303\263s."
0 0 23 29 1 #"\n"
0 0 17 3 40
#";; Esta fun\303\247\303\243o n\303\243o precisa de testes."
0 0 23 29 1 #"\n"
0 0 17 3 79
(
 #";; Voc\303\252 tem que implementar esta fun\303\247\303\243o, o corp"
 #"o incial deve ser descartado."
) 0 0 23 29 1 #"\n"
0 0 23 3 1 #"("
0 0 15 3 6 #"define"
0 0 23 3 2 #" ("
0 0 14 3 17 #"stream-tetraminos"
0 0 23 3 1 #")"
0 0 23 29 1 #"\n"
0 0 23 3 3 #"  ("
0 0 14 3 11 #"stream-cons"
0 0 23 3 1 #" "
0 0 14 3 1 #"T"
0 0 23 3 1 #" "
0 0 14 3 12 #"empty-stream"
0 0 23 3 2 #"))"
0 0 23 29 1 #"\n"
0           0
